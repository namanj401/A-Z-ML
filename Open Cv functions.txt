import cv2 

img = cv2.imread('Sample 1.jpg',-1)           #Reads the image 0 for gray scale 1 for colored image
print(img)                                     #prints image in MAtrix form

cv2.imshow('image',img)                         # shos the image
k = cv2.waitKey(0)                              # waits for some millissecond
if (k==27):
    cv2.destroyAllWindows()                      #closes all windows
elif k==ord('s'):
    cv2.imwrite('Sample 1_copy.png',img)             #makes a copy of the image
    cv2.destroyAllWindows()


VIDEOS READING

import cv2 

cap =cv2.VideoCapture(0)                                                               #to capture video from camera or other file
fourcc= cv2.VideoWriter_fourcc(*'XVID')                                                #codec to write file
out= cv2.VideoWriter('output.avi',fourcc,20.0,(640,480))                               # class to copy a video
while(True):
    
    ret, frame=cap.read()                                                               # reads the img frame by frame ret is true if frame is available else false frame stores the frame
    
    if ret==True:
        print(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))                                       #prints the height
        print(cap.get(cv2.CAP_PROP_FRAME_WIDTH))                                        #prints the widht
        out.write(frame)                                                                #writes to the file
        gray=cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)                                    # converts frame to grayscale
        cv2.imshow('frame',gray)                                                        #prints the frame
        
        if cv2.waitKey(1) & 0xFF==ord('q'):                                             #to close the window
            break
    else:
        break

cap.release()                                                                            #release
out.release()                                                                            #release
cv2.destroyAllWindows()




//POLYGONS ON A image
import numpy as np
import cv2

#img = cv2.imread('Sample 1.jpg', 1)
img = np.zeros([512, 512, 3], np.uint8)                                  #color of different oplygon in BGR format   
                                                                         #thickness=-1 to comletely fill   

img = cv2.line(img, (0,0), (255,255), (147, 96, 44), 10) # 44, 96, 147
img = cv2.arrowedLine(img, (0,255), (255,255), (255, 0, 0), 10)

img = cv2.rectangle(img, (384, 0), (510, 128), (0, 0, 255), 10)
img = cv2.circle(img, (447, 63), 63, (0, 255, 0), -1)
font = cv2.FONT_HERSHEY_SIMPLEX
img = cv2.putText(img, 'OpenCv', (10, 500), font, 4, (0, 255, 255), 10, cv2.LINE_AA)
img = cv2.ellipse(img,(256,256),(100,50),0,0,180,255,-1)

pts = np.array([[10,5],[20,30],[70,20],[50,10]], np.int32)
pts = pts.reshape((-1,1,2))
img = cv2.polylines(img,[pts],True,(0,255,255))
cv2.imshow('image', img)

cv2.waitKey(0)
cv2.destroyAllWindows() 






\\ MOUSE EVENTS

import numpy as np
import cv2
import datetime

#events= [i for i in dir(cv2) if 'EVENT' in i]
#print(events)

def click_event(event,x,y,flags,param):                                    #function definition is same for all programs
    if event== cv2.EVENT_LBUTTONDOWN:
        print(x,' , ',y)
        font=cv2.FONT_HERSHEY_SIMPLEX
        strXY=str(x) + ' , '+str(y)
        cv2.putText(img,strXY,(x,y),font,1,(255,0,0),2)
        cv2.imshow('image',img)
    if event==cv2.EVENT_RBUTTONDOWN:
        blue=img[y,x,0]
        green=img[y,x,1]
        red=img[y,x,2]
        font=cv2.FONT_HERSHEY_SIMPLEX
        strXY=str(blue)+' '+str(green)+' '+str(red)
        cv2.putText(img,strXY,(x,y),font,1,(255,0,0),2)
        cv2.imshow('image',img)

img=cv2.imread('Sample 1.jpg',-1)
cv2.imshow('image',img)

cv2.setMouseCallback('image',click_event)                                     #it is also fixed

cv2.waitKey(0)
cv2.destroyAllWindows()

    




    \\IMAGE FUNCTIONS

    import numpy as np
import cv2
import datetime

#events= [i for i in dir(cv2) if 'EVENT' in i]
#print(events)

#img=np.zeros((255,255,3),np.uint8)
img=cv2.imread('Sample 1.jpg',-1)

print(img.shape) #prints the number of rows columns and channels
print(img.size)  #prints the number of pixels
print(img.dtype) #prints the type

b,g,r=cv2.split(img)

img=cv2.merge((b,g,r))

cv2.imshow('image',img)
cv2.waitKey(0)
cv2.destroyAllWindows()


